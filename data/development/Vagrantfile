# -*- mode: ruby -*-
# vi: set ft=ruby :

# Set Nepho variables with defaults
n_provider  = ENV.fetch('NEPHO_VagrantProvider', 'virtualbox').to_sym
n_box_name  = ENV.fetch('NEPHO_BoxName',         'centos-6.4-i386')
n_box_url   = ENV.fetch('NEPHO_BoxUrl',          'http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-i386-v20130731.box')
n_nepho_dir = ENV.fetch('NEPHO_NephoDir',        '/opt/nepho')

Vagrant.configure('2') do |config|
  config.vm.provider n_provider do |provider, override|
    override.vm.box     = n_box_name
    override.vm.box_url = n_box_url
  end

  # Forward standard ports
  config.vm.network :forwarded_port, guest: 80,  host: 8080, auto_correct: true
  config.vm.network :forwarded_port, guest: 443, host: 8443, auto_correct: true

  # Mount a shared folder containing the cloudlet's data files
  config.vm.synced_folder '../../', n_nepho_dir

  # Prepare NEPHO_ variables to pass to provisioning scripts
  n_vars = ENV.inject("") { |s, i| i.first =~ /^NEPHO_/ ? s << "export #{i.first}=\"#{i.last}\";\n" : s }

  # Call Nepho provisioning scripts if they exist and are executable
  ['bootstrap', 'configure', 'deploy'].each do |f|
    path = File.join(n_nepho_dir, 'hooks', f)
    config.vm.provision :shell, :inline => \
      "#{n_vars} [[ -x #{path} ]] && (echo Running #{path}; #{path})"
  end
end
